// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Gender {
  male
  female
}

model User {
  id         String   @id @default(cuid())
  username   String   @unique
  password   String
  profilePic String
  bio        String   @default("")
  email      String
  gender     Gender
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  posts          Post[]
  likedPosts     PostLike[]
  retweetedPosts PostRetweet[]
}

model Post {
  id        String   @id @default(cuid())
  caption   String
  image     String?
  imageKey  String?
  createdAt DateTime @default(now())

  postedBy    String
  user        User          @relation(fields: [postedBy], references: [id])
  likedBy     PostLike[]
  retweetedBy PostRetweet[]
}

model PostLike {
  id     String @id @default(cuid())
  user   User   @relation(fields: [userId], references: [id])
  post   Post   @relation(fields: [postId], references: [id])
  userId String //will be the table column
  postId String

  @@unique([userId, postId]) // Prevents duplicate likes
}

model PostRetweet {
  id     String @id @default(cuid())
  user   User   @relation(fields: [userId], references: [id])
  post   Post   @relation(fields: [postId], references: [id])
  userId String
  postId String

  @@unique([userId, postId]) // Prevents duplicate retweets
}
